(author: Julian Koenig; Originally by Chris P - Probe Basic)
(version: 2.0)
(date: 05.06.2024)

o<probe_x_plus> sub

  #<xy_clearance>        = #<_ini[probe]XY_CLEARANCE>
  #<probe_mode>          = #2     (0 for setting WC0; 1 for not setting WC0) 
  #<add_probetrips>      = #3     (0 or not defined means one trip)
  #<tool_number_1>       = #<_ini[probe]TOOL_NUMBER_1>
  #<tool_number_2>       = #<_ini[probe]TOOL_NUMBER_2>
  #<tool_number_3>       = #<_ini[probe]TOOL_NUMBER_3>
  #<max_xy_distance>     = [#<_ini[probe]MAX_XY_DISTANCE> + #1]
  #<probe_slow_fr>       = #<_ini[probe]VEL_SLOW>
  #<probe_fast_fr>       = #<_ini[probe]VEL_FAST>
  (#1999 = probe_state; 1 for default; 11-19 for midpoint; 21-29 for rotation; 31-39 for distance) 

  (Safety checks)
  o100 if [#4 EQ 0] (if #4 EQ 1 then safety checks already done by pocket or calibration sub)
    o<probe_safety_checks> call [0]
    o101 if [#<_value> EQ 0]
      o<probe_x_plus> return
    o101 endif
  o100 endif

  (If probe for rotation set rotation to 0)
  o102 if [[#1999 EQ 21] OR [#1999 EQ 22]]     
    G10 L2 P#5220 R0
  o102 endif

  o103 if [[#1999 EQ 31] OR [#1999 EQ 32]]  (distance mode)
  o103 else
    (Cancel G92 offsets)
    G92.1
  o103 endif

  #<workspace_x> = #[5201 + [20 * #5220]]

  #<x_offset>             = #5401
  #<tip_diameter>         = #5410
  #<probe_range_x>        = #5411
  
  
  #<probe_center_offset>  = [#<probe_range_x> / 2]

  
  (Current X Position including offsets in current program units)
  #<x> = #5420


  (Initiate Fast X+ Probe)
  G91
  F[#<probe_fast_fr>]
  G38.2 X[#<max_xy_distance>]
  #<x_plus_probed> = #5061

  (Probe Error check, #5070 will be 0 if failed)
  o110 if [#5070 EQ 0]
      (back to start point and feed)
      G90
      G0 X#<x>
      F[#<probe_fast_fr>]
      (return from sub)
      o<probe_x_plus> return
  o110 endif

  (Move to xy_clearance distance for slow probe)
  G90
  G0 X[#<x_plus_probed> - #<xy_clearance>]

  (Slow Probe Rule, if Slow Probe FR is set to 0, Slow Probe is Bypassed)
  o120 if [#<probe_slow_fr> GT 0]
    (Initiate Slow X+ Probe)
    #<x_plus_probed_sum> = 0
    #1 = #<add_probetrips>
    o121 while [#1  GE 0]
      G91
      F[#<probe_slow_fr>]
      G38.2 X[#<xy_clearance> * 2]
      #<x_plus_probed_sum> = [#<x_plus_probed_sum> + #5061]
      G90
      G0 X[#5061 - #<xy_clearance>]
      #1 = [#1 - 1]
    o121 endwhile
  
    #<x_plus_probed> = [#<x_plus_probed_sum> / [#<add_probetrips> + 1]]
    #1000 = #<x_plus_probed>
  o120 endif

  #<x_plus_zero_edge> = [#<x_plus_probed> + #<probe_center_offset>]

  (probe mode rule for WCO or probe position measuring only)
  o130 if [#<probe_mode> EQ 0]
      
    o140 if [#1999 EQ 12] (midpoint 2. probe)
      G10 L20 P#5220 X[#<_hal[pyvcp.probe_offset]> - #<probe_center_offset> - #<xy_clearance> + [#<x_plus_zero_edge> / 2]]
      M130 P254 (clear messages)
      #1999 = 0
      M130 P[#1999] (send state to hal)
      o141 if [[#<_hal[pyvcp.reload]>] EQ 1]
        M130 P255 (clear plot and reload file)
      o141 endif
      (debug,Distance between points: %.3f#<x_plus_zero_edge>)
      o<probe_x_plus> return
    o140 endif
      
    o150 if [#1999 EQ 22] (rotation 2. probe)
      #<distance_y> = #5421
      #<angle> = ATAN[#<x_plus_zero_edge>] / [#<distance_y>]
      G10 L2 P#5220 R[-#<angle>]
      M130 P254 (clear messages)
      #1999 = 0
      M130 P[#1999] (send state to hal)
      o151 if [[#<_hal[pyvcp.reload]>] EQ 1]
        M130 P255 (clear plot and reload file)
      o151 endif
      o<probe_x_plus> return
    o150 endif


    o160 if [#1999 EQ 31] (distance mode measuring)
      G52 X[[#<x_plus_zero_edge>] + [#5211]]
      (5211-5219 - Shared "G52" and "G92" offset for X, Y, Z, A, B, C, U, V & W)
      #<distance_total> = SQRT[[[#5211]*[#5211]]+[[#5212]*[#5212]]+[[#5213]*[#5213]]]
      M130 P254 (clear messages)
      (debug,X /Y /Z //vector length:                                      , %.3f#5211 /%.3f#5212 /%.3f#5213 //%.3f#<distance_total>)
      (debug,Click again for LOGGING mode. Your prior      , logfile will be ERASED.)
      o<probe_x_plus> return
    o160 endif

    o161 if [#1999 EQ 32] (distance mode logging)
      G52 X[[#<x_plus_zero_edge>] + [#5211]]
      #<distance_total> = SQRT[[[#5211]*[#5211]]+[[#5212]*[#5212]]+[[#5213]*[#5213]]]
      (LOGAPPEND,probe_results.txt)
      (LOG,X:             #5211)
      (LOG,Y:             #5212)
      (LOG,Z:             #5213)
      (LOG,vector length: #<distance_total>)
      (LOG,)
      (LOGCLOSE)
      o<probe_x_plus> return
    o161 endif


    o170 if [#1999 EQ 11] (midpoint 1. probe)
      o<probe_operations>  CALL [1]
    o170 elseif [#1999 EQ 21] (rotation 1. probe)
      o<probe_operations>  CALL [2]
    o170 endif


    (if no special state just set 0)
    G10 L20 P#5220 X[#<_hal[pyvcp.probe_offset]> - #<probe_center_offset> - #<xy_clearance>]

    o171 if [#1999 EQ 22]      
      G10 L20 P0 Y0
      o<probe_x_plus> return
    o171 endif

    o180 if [[#<_hal[pyvcp.reload]>] EQ 1]
      M130 P255 (clear plot and reload file)
    o180 endif          
      
      o<probe_x_plus> return
  o130 endif

o<probe_x_plus> endsub
M2 (end program)
